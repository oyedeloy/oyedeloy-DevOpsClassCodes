---
- name: Build Maven Project and Save Docker Image Locally
  hosts: localhost   # Replace with the hostname or group of hosts where you want to run the build
  become: yes       # If you need elevated privileges, set to 'yes' and provide sudo password
  vars:
    project_directory: "/home/dele/oyedeloy-DevOpsClassCodes"
    local_image_name: "my-java-app"
    local_image_tag: "01"
  tasks:
    - name: Change to the project directory
      shell: cd "{{ project_directory }}"
      args:
        chdir: "{{ project_directory }}"

    - name: Execute Maven Build Steps
      shell: "mvn {{ item }}"
      args:
        chdir: "{{ project_directory }}"
      loop:
        - compile
        - test
        - pmd:pmd
        - package

    - name: Copy JAR file to local directory
      copy:
        src: "{{ project_directory }}/target/addressbook.war"
        dest: "{{ project_directory }}/addressbook.war"


- name: Copy Dockerfile and WAR file to Remote Host
  hosts: your_remote_server   # Replace with the hostname or group of hosts for the remote server
  become: yes                # If you need elevated privileges, set to 'yes' and provide sudo password
  vars:
    project_directory: "/home/dele/oyedeloy-DevOpsClassCodes"  # Your project directory
    files_to_copy:
      - "{{ project_directory }}/Dockerfile"
      - "{{ project_directory }}/target/addressbook.war"
    remote_directory: "/home/ec2-user"  # Use the same project directory on the remote host
    remote_image_name: "my-java-app"
    remote_image_tag: "01"
  tasks:
    - name: Copy Files to Remote Host
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ remote_directory }}/"
        remote_src: yes  # This allows copying from the local path specified in item
      loop: "{{ files_to_copy }}"
      when: ansible_loop.index0 == 0

- name: Build Docker Image on Remote Host
  hosts: all  # Replace with the hostname or group of hosts for the remote server
  become: yes                # If you need elevated privileges, set to 'yes' and provide sudo passHostword
  vars:
    remote_username: "ec2-user"
    remote_image_name: "my-java-app"
    remote_directory: "/home/ec2-user" 
    remote_image_tag: "01"
    remote_image_tarball: "/tmp/{{ my-java-app }}.tar"  # Specify the remote path for the image tarball
  tasks:
    - name: Change to the remote project directory
      ansible.builtin.shell: cd "{{ remote_directory }}"
      #become_user: "{{ remote_username }}"

    - name: Build Docker Image on Remote Host
      ansible.builtin.command: |
        docker build -t "{{ remote_image_name }}:{{ remote_image_tag }}" -f Dockerfile "{{ remote_directory }}"
      #become_user: "{{ remote_username }}"

    - name: Save Docker Image as Tarball on Remote Host
      ansible.builtin.command: "docker save -o {{ remote_image_tarball }} {{ remote_image_name }}:{{ remote_image_tag }}"
      #become_user: "{{ remote_username }}"

- name: Run Docker Container on Remote Host
  hosts: all   # Replace with the hostname or group of hosts for the remote server
  become: yes                # If you need elevated privileges, set to 'yes' and provide sudo password
  vars:
    remote_username: "{{ remote_username }}"
    remote_image_name: "my-java-app"
    remote_image_tag: "01"
  tasks:
    - name: Run Docker Container on Remote Host
      docker_container:
        name: "{{ remote_image_name }}"
        image: "{{ remote_image_name }}:{{ remote_image_tag }}"
        state: started
        ports:
          - "8080:8080"
      #become_user: "{{ remote_username }}"
