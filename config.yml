---
- name: Build Maven Project and Save Docker Image Locally
  hosts: localhost   # Replace with the hostname or group of hosts where you want to run the build
  become: yes       # If you need elevated privileges, set to 'yes' and provide sudo password
  vars:
    project_directory: "/home/dele/oyedeloy-DevOpsClassCodes"
    local_image_name: "my-java-app"
    local_image_tag: "01"
  tasks:
    - name: Change to the project directory
      shell: cd "{{ project_directory }}"
      args:
        chdir: "{{ project_directory }}"

    - name: Execute Maven Build Steps
      shell: "mvn {{ item }}"
      args:
        chdir: "{{ project_directory }}"
      loop:
        - compile
        - test
        - pmd:pmd
        - package

    - name: Copy JAR file to local directory
      copy:
        src: "{{ project_directory }}/target/addressbook.war"
        dest: "{{ project_directory }}/addressbook.war"

    - name: Build Docker Image Locally
      docker_image:
        build:
          path: "{{ project_directory }}"
          source: "{{ project_directory }}"
          dockerfile: Dockerfile
        name: "{{ local_image_name }}:{{ local_image_tag }}"
      delegate_to: localhost

    - name: Save Docker Image as Tarball
      command: "docker save -o {{ local_image_tarball }} {{ local_image_name }}:{{ local_image_tag }}"
      delegate_to: localhost

- name: Copy and Run Docker Image on Remote Server
  hosts: all   # Replace with the hostname or group of hosts for the remote server
  become: yes                # If you need elevated privileges, set to 'yes' and provide sudo password
  vars:
    remote_username: "your_remote_username"
    remote_image_name: "my-Java-app"
    remote_image_tag: "01"
  tasks:
    - name: Copy Docker Image Tarball to Remote Server
      copy:
        src: "/home/dele/{{ local_image_name }}.tar"
        dest: "/tmp/{{ local_image_name }}.tar"

    - name: Transfer Docker Image Tarball to Remote Server
      ansible.builtin.synchronize:
        mode: pull
        src: "/tmp/{{ local_image_name }}.tar"
        dest: "/tmp/{{ local_image_name }}.tar"
        rsync_opts: "--chmod=ugo=rwX"

    - name: Load Docker Image on Remote Server
      command: "docker load -i {{ remote_image_tarball }}"
      #become_user: "{{ remote_username }}"
      ignore_errors: yes  # Ignore errors if the image is already loaded

    - name: Run Docker Container on Remote Server
      docker_container:
        name: "{{ remote_image_name }}"
        image: "{{ remote_image_name }}:{{ remote_image_tag }}"
        state: started
        ports:
          - "8080:8080"
      become_user: "{{ remote_username }}"
