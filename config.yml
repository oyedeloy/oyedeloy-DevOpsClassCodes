---
- name: Build Maven Project, Build Docker Image, and Push to Docker Hub
  hosts: localhost
  become: yes
  vars:
    project_directory: "/home/dele/oyedeloy-DevOpsClassCodes"
    local_image_name: "oyedeloy/my-java-app"
    local_image_tag: "01"
    dockerhub_credentials_file: "/home/dele/dockerhub_credentials.yml"  # Name of your Ansible Vault file

  tasks:
    - name: Load Docker Hub Credentials
      ansible.builtin.include_vars:
        file: "{{ dockerhub_credentials_file }}"
      vars:
        ansible_become: false  # Prevent becoming root for this task

    - name: Change to the project directory
      shell: cd "{{ project_directory }}"
      args:
        chdir: "{{ project_directory }}"

    - name: Execute Maven Build Steps
      shell: "mvn {{ item }}"
      args:
        chdir: "{{ project_directory }}"
      loop:
        - compile
        - test
        - pmd:pmd
        - package

    - name: Build Docker Image Locally
      shell: |
        docker build -t "{{ local_image_name }}:{{ local_image_tag }}" -f Dockerfile "{{ project_directory }}"
      delegate_to: localhost

    - name: Log in to Docker Hub
      docker_login:
        username: "{{ dockerhub_username }}"
        password: "{{ dockerhub_password }}"

    - name: Push Docker Image to Docker Hub
      shell: |
        docker login -u {{ dockerhub_username }} -p {{ dockerhub_password }}
        docker push {{ dockerhub_username }}/my-java-app:{{ local_image_tag }}
      delegate_to: localhost


- name: Ensure Docker is installed
  hosts: all  # Replace with the hostname or group of hosts for the remote server
  become: yes  # If you need elevated privileges, set to 'yes' and provide sudo password
  tasks:
    - name: Install Docker
      ansible.builtin.package:
        name: docker.io,docker,docker-ce
        state: present
      when: ansible_pkg_mgr == "apt"  # For Debian/Ubuntu-based systems

    - name: Install Docker
      ansible.builtin.package:
        name: docker
        state: present
      when: ansible_pkg_mgr == "yum"  # For CentOS/RedHat-based systems


- name: Pull Docker Image from Docker Hub and Run Container
  hosts: all  # Replace with the hostname or group of hosts for the remote server
  become: yes  # If you need elevated privileges, set to 'yes' and provide sudo password
  vars:
    remote_image_name: "oyedeloy/my-java-app"  # Replace with your Docker Hub image name
    remote_image_tag: "01"
    container_name: "my-java-app-container"
  tasks:
    - name: Pull Docker Image from Docker Hub
      shell: |
        docker pull "{{ remote_image_name }}:{{ remote_image_tag }}"
      register: docker_pull_result

    - name: Run Docker Container
      shell: |
        docker run -d --name "{{ container_name }}" -p 8080:8080 "{{ remote_image_name }}:{{ remote_image_tag }}"
      when: docker_pull_result.rc == 0  # Only run the container if the image was successfully pulled
